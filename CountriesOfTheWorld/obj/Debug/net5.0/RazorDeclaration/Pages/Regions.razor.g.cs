// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace CountriesOfTheWorld.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using CountriesOfTheWorld;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using CountriesOfTheWorld.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\_Imports.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/regions")]
    public partial class Regions : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 129 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\Pages\Regions.razor"
       


    // Need instance of Root as data (response obj) needs to contain an IEnumerable to iterate over
    // Set this up to contain objects of the model class CountryData as below
    public class Root
    {
        public List<CountryData> MyArray { get; set; }
    }

    // **** Radio Button / Checkbox:


    // List of country data based on model class, all attributes are contained within
    private List<CountryData> data;
    private string errorMsg;
    private bool found;
    //private string region = "europe";
    [Parameter] public bool isSelectedEurope { get; set; } = false;
    [Parameter] public bool isSelectedAsia { get; set; } = false;
    [Parameter] public bool isSelectedAfrica { get; set; } = false;
    [Parameter] public bool isSelectedAmericas { get; set; } = false;
    [Parameter] public bool isSelectedOceania { get; set; } = false;

    [Parameter] public string Region { get; set; } = "";





    // An approach I tried - using the html elements value="" field

    

#line default
#line hidden
#nullable disable
#nullable restore
#line 192 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\Pages\Regions.razor"
           


    // Toggle state handlers for radio buttons
    void HandleOnSelectedEurope()
    {
        // Check existing state first (although pointless really, as Radio button)
        if (isSelectedEurope)
        {
            isSelectedEurope = false;
        }
        else
        {
            // Change state
            isSelectedEurope = true;
        }
    }

    void HandleOnSelectedAsia()
    {
        if (isSelectedAsia)
        {

            isSelectedAsia = false;
        }
        else
        {
            // Change state
            isSelectedAsia = true;
        }
    }

    void HandleOnSelectedAfrica()
    {
        if (isSelectedAfrica)
        {

            isSelectedAfrica = false;
        }
        else
        {
            // Change state
            isSelectedAfrica = true;
        }
    }

    void HandleOnSelectedAmericas()
    {
        if (isSelectedAmericas)
        {

            isSelectedAmericas = false;
        }
        else
        {
            // Change state
            isSelectedAmericas = true;
        }
    }

    void HandleOnSelectedOceania()
    {
        if (isSelectedOceania)
        {

            isSelectedOceania = false;
        }
        else
        {
            // Change state
            isSelectedOceania = true;
        }
    }


    

#line default
#line hidden
#nullable disable
#nullable restore
#line 276 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\Pages\Regions.razor"
           

    // following: visualstudiomagazine.com/articles/2018/10/01/blazor-event-handling.aspx

    // Tried making this dynamic - ie For radio or checkbox selection, update region, as you've seen
    private async Task GetDataAsync()
    {
        try
        {

            string allUri = "https://restcountries.eu/rest/v2/all";
            data = await Http.GetFromJsonAsync<List<CountryData>>(allUri);

            

#line default
#line hidden
#nullable disable
#nullable restore
#line 314 "C:\Users\Stephen's Laptop\Documents\College Files\Year 4\Semester 7\EAD - Enterprise App Development 1\CA3\Local Repo\ead_ca3\CountriesOfTheWorld\Pages\Regions.razor"
                   

            errorMsg = String.Empty;
            found = true;

        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }

    // Plan B approach - Less complex, Regional GETS - One method each, called directly
    private async Task GetEuropeDataAsync()
    {
        try
        {
            string europeUri = "https://restcountries.eu/rest/v2/region/europe";
            data = await Http.GetFromJsonAsync<List<CountryData>>(europeUri);
            errorMsg = String.Empty;
            found = true;
        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }


    // Regional GETS - For radio or chedkbox
    private async Task GetAsiaDataAsync()
    {
        try
        {
            string europeUri = "https://restcountries.eu/rest/v2/region/asia";
            data = await Http.GetFromJsonAsync<List<CountryData>>(europeUri);
            errorMsg = String.Empty;
            found = true;
        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }


    // Regional GETS - For radio or chedkbox
    private async Task GetAfricaDataAsync()
    {
        try
        {
            string europeUri = "https://restcountries.eu/rest/v2/region/africa";
            data = await Http.GetFromJsonAsync<List<CountryData>>(europeUri);
            errorMsg = String.Empty;
            found = true;
        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }

    // Regional GETS - For radio or chedkbox
    private async Task GetAmericasDataAsync()
    {
        try
        {
            string europeUri = "https://restcountries.eu/rest/v2/region/americas";
            data = await Http.GetFromJsonAsync<List<CountryData>>(europeUri);
            errorMsg = String.Empty;
            found = true;
        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }

    // Regional GETS - For radio or chedkbox
    private async Task GetOceaniaDataAsync()
    {
        try
        {
            string europeUri = "https://restcountries.eu/rest/v2/region/oceania";
            data = await Http.GetFromJsonAsync<List<CountryData>>(europeUri);
            errorMsg = String.Empty;
            found = true;
        }
        catch (Exception e)
        {
            found = false;
            errorMsg = e.Message;
        }
    }



    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
